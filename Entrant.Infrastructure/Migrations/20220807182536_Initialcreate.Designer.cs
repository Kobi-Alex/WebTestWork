// <auto-generated />
using Entrant.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Entrant.Infrastructure.Migrations
{
    [DbContext(typeof(EntrantDbContext))]
    [Migration("20220807182536_Initialcreate")]
    partial class Initialcreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entrant.Domain.Entities.EntrantAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EntrantContactId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("EntrantContactId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Entrant.Domain.Entities.EntrantContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Entrant.Domain.Entities.EntrantIncedent", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("EntrantAccountId")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.HasIndex("EntrantAccountId");

                    b.ToTable("Incedents");
                });

            modelBuilder.Entity("Entrant.Domain.Entities.EntrantAccount", b =>
                {
                    b.HasOne("Entrant.Domain.Entities.EntrantContact", "EntrantContact")
                        .WithMany("EntrantAccounts")
                        .HasForeignKey("EntrantContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntrantContact");
                });

            modelBuilder.Entity("Entrant.Domain.Entities.EntrantIncedent", b =>
                {
                    b.HasOne("Entrant.Domain.Entities.EntrantAccount", "EntrantAccount")
                        .WithMany("EntrantIncedents")
                        .HasForeignKey("EntrantAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntrantAccount");
                });

            modelBuilder.Entity("Entrant.Domain.Entities.EntrantAccount", b =>
                {
                    b.Navigation("EntrantIncedents");
                });

            modelBuilder.Entity("Entrant.Domain.Entities.EntrantContact", b =>
                {
                    b.Navigation("EntrantAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
